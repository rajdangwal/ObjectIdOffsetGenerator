public class Test extends java.lang.Object
{
    public Obj o1;
    public Obj2 o2;

    public void <init>()
    {
        Test this;

        this := @this: Test;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void funTest(Obj, Obj2)
    {
        Test this;
        Obj oTemp1, ofun1, $r0, $r0_1;
        Obj2 oTemp2, $r1;

        this := @this: Test;

        oTemp1 := @parameter0: Obj;

        oTemp2 := @parameter1: Obj2;

        this.<Test: Obj o1> = oTemp1;

        this.<Test: Obj2 o2> = oTemp2;

        $r0 = this.<Test: Obj o1>;

        virtualinvoke $r0.<Obj: void funObj()>();

        $r1 = this.<Test: Obj2 o2>;

        virtualinvoke $r1.<Obj2: void funObj2()>();

        $r0_1 = new Obj;

        specialinvoke $r0_1.<Obj: void <init>()>();

        ofun1 = $r0_1;

        virtualinvoke ofun1.<Obj: void funObj()>();

        virtualinvoke ofun1.<Obj: void funObj()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        Obj2 oTemp2, $r1, $r4, $r4_1, $r4_2;
        Obj3 oTemp3, oTemp4, $r3, $r6, $r3_1, $r3_2, $r3_3, $r6_1;
        Obj4 oTemp6, $r5, $r8, $r5_1, $r5_2;
        Obj5 oTemp5, $r7;
        Obj $r0;
        Test $r2;

        args := @parameter0: java.lang.String[];

        $r0 = new Obj;

        specialinvoke $r0.<Obj: void <init>()>();

        $r1 = new Obj2;

        specialinvoke $r1.<Obj2: void <init>()>();

        oTemp2 = $r1;

        $r2 = new Test;

        specialinvoke $r2.<Test: void <init>()>();

        virtualinvoke $r2.<Test: void funTest(Obj,Obj2)>($r0, oTemp2);

        $r3 = new Obj3;

        specialinvoke $r3.<Obj3: void <init>()>();

        oTemp3 = $r3;

        oTemp3.<Obj3: Obj2 objectOfObj2> = oTemp2;

        $r3_1 = new Obj3;

        specialinvoke $r3_1.<Obj3: void <init>()>();

        oTemp4 = $r3_1;

        $r4 = oTemp3.<Obj3: Obj2 objectOfObj2>;

        oTemp4.<Obj3: Obj2 objectOfObj2> = $r4;

        virtualinvoke oTemp3.<Obj3: void funObj3()>();

        $r5 = new Obj4;

        specialinvoke $r5.<Obj4: void <init>()>();

        oTemp6 = $r5;

        $r6 = new Obj3;

        specialinvoke $r6.<Obj3: void <init>()>();

        oTemp6.<Obj4: Obj3 objectOfObj3> = $r6;

        $r3_2 = oTemp6.<Obj4: Obj3 objectOfObj3>;

        $r4_1 = new Obj2;

        specialinvoke $r4_1.<Obj2: void <init>()>();

        $r3_2.<Obj3: Obj2 objectOfObj2> = $r4_1;

        $r7 = new Obj5;

        specialinvoke $r7.<Obj5: void <init>()>();

        oTemp5 = $r7;

        $r8 = new Obj4;

        specialinvoke $r8.<Obj4: void <init>()>();

        oTemp5.<Obj5: Obj4 objectOfObj4> = $r8;

        $r5_1 = oTemp5.<Obj5: Obj4 objectOfObj4>;

        $r5_1.<Obj4: Obj3 objectOfObj3> = oTemp4;

        $r5_2 = oTemp5.<Obj5: Obj4 objectOfObj4>;

        $r3_3 = $r5_2.<Obj4: Obj3 objectOfObj3>;

        $r6_1 = oTemp6.<Obj4: Obj3 objectOfObj3>;

        $r4_2 = $r6_1.<Obj3: Obj2 objectOfObj2>;

        $r3_3.<Obj3: Obj2 objectOfObj2> = $r4_2;

        return;
    }
}
